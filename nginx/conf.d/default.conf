# HTTP server - redirects to HTTPS
server {
    listen 80;
    server_name ryelite.org www.ryelite.org;

    # Redirect all HTTP traffic to HTTPS with www
    location / {
        return 301 https://www.ryelite.org$request_uri;
    }
}

# HTTPS server - non-www to www redirect
server {
    listen 443 ssl http2;
    server_name ryelite.org;

    # SSL certificate configuration (Cloudflare Origin Certificate)
    ssl_certificate /etc/ssl/certs/ryelite.org/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/ryelite.org/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;

    # Redirect non-www to www
    return 301 https://www.ryelite.org$request_uri;
}

# HTTPS server - www version
server {
    listen 443 ssl http2;
    server_name www.ryelite.org;

    # SSL certificate configuration (Cloudflare Origin Certificate)
    ssl_certificate /etc/ssl/certs/ryelite.org/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/ryelite.org/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;

    # Document root
    root /usr/share/nginx/html;
    index index.html;

    # Enable browser caching for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|mp4)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # API proxy to Node.js server with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Cookie handling for sessions
        proxy_set_header Cookie $http_cookie;
        proxy_cookie_domain localhost $host;
        proxy_cookie_path / /;
        proxy_cookie_flags ~ secure samesite=lax;
        
        # Ensure credentials are passed through
        proxy_pass_header Set-Cookie;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Special rate limiting for login endpoints
    location ~ ^/api/(auth|login) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie handling
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;
    }

    # RSS feed proxy to RSS generator service
    location /rss/ {
        proxy_pass http://rss-generator:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache RSS feeds for 1 hour
        proxy_cache_valid 200 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # RSS API proxy
    location /api/rss/ {
        proxy_pass http://rss-generator:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SPA routing - serve index.html for all non-API routes
    location / {
        try_files $uri $uri/ /index.html;
    }
}
